
Vase: A container for data-driven services
============================================

This system provides a data-driven way to describe and run RESTful APIs that
are backed by a durable database (Datomic).


### Getting started

If you are new to the project, please review the [design document](docs/design_doc.mkd).

If you're looking to get started with Vase, follow the tutorial: [Building your first API](docs/your_first_api.mkd).
You may also want to see [how to add Vase to an existing Pedestal Service](docs/adding_vase.mkd).


## Usage

Once Vase is [added to your service](docs/adding_vase.mkd), you can begin setting
up a `system.edn` configuration file and your initial service descriptor
(both must be on your resource path).  The configuration file will point to
your `:initial-descriptor`.  Please see this project's [test config](test/resources/system.edn)
and [test descriptor](test/resources/test_descriptor.edn) as an example.


## Configuration

To configure logging see config/logback.xml. By default, the app logs to stdout and `logs/`.
To learn more about configuring Logback, read its [documentation](http://logback.qos.ch/documentation.html).

The [Datomic Schema](http://docs.datomic.com/schema.html) used internally by Vase
is located in the [resource directory](./resources/vase-schema.edn).

#### System Config

There also exists an [application/service level configuration file](./config/system.edn)

Use this file to:

 * Set the port that the service runs: `:service-port` *default: 8080*
 * Toggle upsert on or off (always on in dev mode): `:enable-upsert` *true*
   * If turned off but other upsert options are turned on, those other options will
     appear functional, but have no affect on the application
 * Toggle upsert over http on or off: `:http-upsert` *true*
 * Toggle transacting a history of upsert changes into the DB: `:transact-upsert` *true*
 * Set an initial descriptor file to load when the service starts: `:initial-descriptor` *"sample-descriptor.edn"*
   * This is a string of a JVM Resource-path file
 * Set an initial version of an API to load when the service starts: `:initial-version` *[:example :v1]*
   * This must be a path in the initial descriptor

#### Datomic Config

Datomic is configured through its transactor/storage conf file - that is set/determined by the user.

