Adding Vase to a Pedestal project
=================================

This document will help you add Vase to an existing Pedestal project. Vase creates pedestal routes based on an application description. These routes can be concatenated to your application's routes.

It assumes you created your Pedestal project with the template:

```
lein new pedestal-service my-new-service
```

### Step 1: Add the Vase dependency

In your `project.clj`, add the Vase dependency information:

```
[com.cognitect/vase "0.1.0"]
```

### Step 2: Update your `service.clj`

#### Add the new required namespaces to your `service.clj` ns declaration

```clojure
(ns my-new-service.service
  (:require ;...
            [vase.datomic]
            [vase]))
```

#### Adjust your route definition

The initial template will have a route definition within `service.clj`

```clojure
(defroutes routes
  ;; Defines "/" and "/about" routes with their associated :get handlers.
  ;; The interceptors defined after the verb map (e.g., {:get home-page}
  ;; apply to / and its children (/about).
  [[["/" {:get home-page}
     ^:interceptors [(body-params/body-params) bootstrap/html-body]
     ["/about" {:get about-page}]]]])
```

This should become...

```clojure
(defn master-routes
  []
  (table/table-routes
   {}
   [["/" :get [bootstrap/html-body home-page] :route-name ::home-page]
    ["/about" :get [bootstrap/html-body about-page] :route-name ::about-page]]))
    
(defn app-routes
  [api-root spec]
  (table/table-routes
   {}
   (vase/routes api-root spec)))
```

#### Update your service map

```clojure
(defn service-map
  []
  (let [db "datomic:mem://vase-sample"
        descriptor (vase/load-descriptor "sample.edn")
        conn (vase.datomic/connect db)]
    (vase.datomic/ensure-schema conn (-> descriptor :example :norms))
    {:env :prod
     ::bootstrap/routes (concat (master-routes)
                                (app-routes "/api" {:descriptor  descriptor
                                                    :app-name    :example
                                                    :version     :v1
                                                    :datomic-uri db}))
     ::bootstrap/resource-path "/public"
     ::bootstrap/type :jetty
     ::bootstrap/port 8080}))
```

### Step 3: Update your `server.clj`

Update `runnable-service` and `run-dev` to invoke the `service/service-map` fn.

### Step 4: Create services

Your Pedestal application is now Vase-enabled.  You should now setup any
necessary configuration files.  Once Vase is configured, you can begin
[creating services](./your_first_api.mkd)

